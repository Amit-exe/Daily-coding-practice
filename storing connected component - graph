#include<bits/stdc++.h>

using namespace std;
vector<vector<int>> cc;
vector<int> ccc;
const int N = 1e5+10;
vector<int> g[N];
bool visited[N];

void dfs(int vertex){
	visited[vertex] = true;
	ccc.push_back(vertex);
	for(auto child : g[vertex]){
		if(visited[child]) continue;
		dfs(child);
	}
}

int main(){
	int n,m;
	cin>>n>>m;
	for(int i=0;i<m;++i){
		int v1,v2;
		cin>>v1>>v2;
		g[v1].push_back(v2);
		g[v2].push_back(v1);

	}
	int ct =0;
	for(int i=1;i<=n;i++){
		if(visited[i]) continue;
		ccc.clear();
		dfs(i);
		cc.push_back(ccc);
		ct++;
	}
	cout<<ct;
	cout<<endl<<cc.size();
	for(auto i : cc){
		for(int j : i){
			cout<<j<<" ";
		}
		cout<<endl;
	}
	return 0;
}
