#include<bits/stdc++.h>

using namespace std;
const int N = 1e5+10;
vector<int> g[N];
bool visited[N];

bool dfs(int vertex, int prev){
		visited[vertex] = true;
		bool isloopexist = false;
		for(auto child : g[vertex]){
			if(visited[child] && vertex==prev) continue;
			if(visited[child]) return true;
			isloopexist |= dfs(child, vertex); 
		}
		return false;
}

int main(){
	int n,m;
	cin>>n>>m;
	for(int i=0;i<m;++i){
		int v1,v2;
		cin>>v1>>v2;
		g[v1].push_back(v2); 	
		g[v2].push_back(v1);

	}
	bool isloopexist = 0;
	for(int i=1;i<=n;++i){
		if(visited[i]) continue;
		if(dfs(i,0))
		{
			isloopexist = true;
			break;
		}
	}
	cout<<isloopexist;
	
	return 0;
}
